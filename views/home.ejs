<%- include('partials/home-header') %>
<body>
    <header>
        <button class="menu-btn" onclick="toggleMenu()">&#9776;</button>
        <div class="branding">
            <h1>LegacyLink</h1>
            <span>Alumni Platform of Tatyasaheb Kore Institute of Engineering and Technology</span>
        </div>
        <div class="profile-pic" onclick="openProfileSidebar()"></div>
    </header>

    <% if (user) { %>
        <div class="profile-sidebar" id="profileSidebar">
            <button class="close-btn" onclick="closeProfileSidebar()">×</button>
            <h2>Profile Information</h2>
            <p>Name: <%= user.name %></p>
            <p>Batch: <%= user.batch_year %></p>
            <p>Department: <%= user.department %></p>
            <p>Email: <%= user.email %></p>
            <form action="/logout" method="POST" class="logout-form">
                <button type="submit" class="logout-button">Logout</button>
            </form>
        </div>
    <% } %>

    <div class="menu-bar" id="menuBar">
        <a href="/home">Home</a>
        <a href="#" onclick="togglePostForm()">Post Blog</a>
        <a href="/profile">Profile Changes</a>
        <a href="#" onclick="showEvents()">Events</a>
        <a href="http://www.tkietwarana.ac.in/contact/">Contact Us</a>
    </div>

    <nav>
        <ul>
            <li><a href="/home">Home</a></li>
            <li><a href="#" onclick="togglePostForm()">Post Blog</a></li>
            <li><a href="/profile">Profile Changes</a></li>
            <li><a href="#" onclick="showEvents()">Events</a></li>
            <li><a href="http://www.tkietwarana.ac.in/contact/">Contact Us</a></li>
        </ul>
    </nav>


<section class="posts-section">
    <h2>Recent Posts by Alumni and Students</h2>

    <!-- Post Creation Form -->
    <div class="post-creation-container">
        <section class="post-creation-section" id="postCreationSection" style="display: none;">
            <h2>Create a New Post</h2>
            <form action="/create_post" method="POST" class="post-form">
                <div class="form-group">
                    <label for="postTitle">Title</label>
                    <input type="text" id="postTitle" name="title" required placeholder="Enter post title">
                </div>
                <div class="form-group">
                    <label for="postContent">Content</label>
                    <textarea id="postContent" name="content" required placeholder="Write your post here"></textarea>
                </div>
                <button type="submit" class="submit-button">Create Post</button>
            </form>
        </section>
    </div>

    <!-- Existing Posts -->
    <div class="existing-posts-container">
        <% if (posts.length > 0) { %>
            <% posts.forEach(post => { %>
                <div class="post-card" data-post-id="<%= post.id %>">
                    <h3><%= post.title %></h3>
                    <p><%= post.content %></p>
                    <small>— <strong><%= post.author_name %></strong> (<%= post.user_type %>, Batch of <%= post.batch_year %>)</small>
                    <br>
                    <small>Posted on <%= post.created_at %></small>

                    <!-- Delete Post Button (Visible only for the user's own posts) -->
                    <% if (post.user_prn === user.prn && post.id) { %>
                        <button class="delete-post-button" onclick="confirmDeletePost('<%= post.id %>'); return false;">Delete Post</button>
                    <% } %>

                    <!-- Like Button -->
                    <form action="/like_post/<%= post.id %>" method="POST" class="like-form" data-post-id="<%= post.id %>">
                        <button type="submit" class="like-button">
                            <% if (post.user_liked) { %>
                                Unlike
                            <% } else { %>
                                Like
                            <% } %> (<%= post.like_count %>)
                        </button>
                    </form>

                    <!-- Comment Section -->
                    <div class="comments-section">
                        <button class="view-comments-button" data-post-id="<%= post.id %>">
                            View Comments (<%= comments.filter(comment => comment.post_id === post.id).length %>)
                        </button>

                        <div class="comments-container" id="comments-<%= post.id %>">
                            <% comments.filter(comment => comment.post_id === post.id).forEach(comment => { %>
                                <div class="comment" data-comment-id="<%= comment.id %>">
                                    <p>
                                        <strong><%= comment.student_name || comment.alumni_name %>:</strong> 
                                        <%= comment.comment %>
                                        <% if (comment.user_prn === user.prn) { %>
                                            <form action="/delete_comment/<%= comment.id %>" method="POST" class="delete-comment-form">
                                                <button type="submit" class="delete-comment-button">Delete</button>
                                            </form>
                                        <% } %>
                                    </p>
                                </div>
                            <% }); %>
                            
                            <form action="/comment_post/<%= post.id %>" method="POST" class="comment-form" data-post-id="<%= post.id %>">
                                <textarea name="comment" placeholder="Write a comment..." required></textarea>
                                <button type="submit" class="comment-button">Comment</button>
                            </form>
                        </div>
                    </div>
                </div>
            <% }); %>
        <% } else { %>
            <h1>No posts in the database.</h1>
        <% } %>
    </div>
</section>

<section class="events-section" style="display: none;">
    <div class="events-section-header">
        <h2>Upcoming Events</h2>
        <button onclick="toggleEventForm()" class="create-event-btn">Create Event</button>
    </div>
    <!-- Event Creation Form -->
    <div class="event-creation-container">
        <section class="event-creation-section" id="eventCreationSection" style="display: none;">
            <h2>Create a New Event</h2>
            <form action="/create_event" method="POST" class="event-form">
                <div class="form-group">
                    <label for="eventTitle">Title</label>
                    <input type="text" id="eventTitle" name="title" required placeholder="Enter event title">
                </div>
                <div class="form-group">
                    <label for="eventDescription">Description</label>
                    <textarea id="eventDescription" name="description" required placeholder="Write event details here"></textarea>
                </div>
                <div class="form-group">
                    <label for="eventDate">Event Date</label>
                    <input type="datetime-local" id="eventDate" name="event_date" required>
                </div>
                <div class="form-group">
                    <label for="eventLocation">Location</label>
                    <input type="text" id="eventLocation" name="location" required placeholder="Enter event location">
                </div>
                <button type="submit" class="submit-button">Create Event</button>
            </form>
        </section>
    </div>

<div class="existing-events-container">
    <% if (events && events.length > 0) { %>
        <% events.forEach(event => { %>
            <div class="event-card" data-event-id="<%= event.id %>">
                <div class="event-header">
                    <h3><%= event.title %></h3>
                    <div class="event-meta">
                        <small>Created by <strong><%= event.creator_name %></strong> 
                            (<%= event.organizer_type %>, Batch of <%= event.creator_batch_year %>)</small>
                        <br>
                        <small>Posted on <%= new Date(event.created_at).toLocaleDateString() %></small>
                    </div>
                </div>
                
                <div class="event-content">
                    <p><%= event.description %></p>
                    <div class="event-details">
                        <p><i class="far fa-calendar"></i> <strong>Date:</strong> 
                            <%= new Date(event.event_date).toLocaleString() %></p>
                        <p><i class="fas fa-map-marker-alt"></i> <strong>Location:</strong> 
                            <%= event.location %></p>
                    </div>
                </div>

                <div class="event-actions">
                    <% if (user && event.organizer_prn === user.prn) { %>
                        <button class="delete-event-button" data-event-id="<%= event.id %>">Delete Event</button>
                    <% } %>

                    <button class="register-button <%= event.user_registered ? 'registered' : '' %>" 
                            data-event-id="<%= event.id %>">
                        <%= event.user_registered ? 'Unregister' : 'Register' %>
                        (<span class="registration-count"><%= event.registration_count %></span>)
                    </button>
                </div>
            </div>
        <% }); %>
    <% } else { %>
        <p class="no-events">No upcoming events.</p>
    <% } %>
</div>
</section>

    <section class="donation-section">
        <h2>Support the Legacy</h2>
        <p>Contribute to the future of the institution and support the growth of the alumni community.</p>
        <a href="#" class="donation-button">Donate Now</a>
    </section>

    <footer class="footer">
        <p>&copy; 2025 LegacyLink. All rights reserved.</p>
    </footer>

    <div class="chatbot-toggle" id="chatbotToggle">
        <button class="chatbot-button" onclick="toggleChatbot()">
            <span class="chat-icon">💬</span>
        </button>
    </div>

    <!-- Chatbot container -->
    <div class="chatbot-container" id="chatbotContainer">
        <div class="chatbot-header">
            <h3>LegacyLink Assistant</h3>
            <button class="close-chat-btn" onclick="toggleChatbot()">×</button>
        </div>
        <div class="chatbot-messages" id="chatbotMessages">
            <div class="bot-message">
                <p>Hello! I'm your LegacyLink assistant. How can I help you today?</p>
            </div>
        </div>
        <div class="chatbot-input">
            <input type="text" id="chatInput" placeholder="Type a message...">
            <button id="sendMessage" onclick="sendChatMessage()">
                <span class="send-icon">➤</span>
            </button>
        </div>
    </div>

    <script src="/js/home.js"></script>

    <script>
        // Function to toggle chatbot visibility
        function toggleChatbot() {
            const chatbotContainer = document.getElementById('chatbotContainer');
            if (chatbotContainer.classList.contains('show-chatbot')) {
                chatbotContainer.classList.remove('show-chatbot');
            } else {
                chatbotContainer.classList.add('show-chatbot');
            }
        }

        // Replace the existing sendChatMessage function
async function sendChatMessage() {
    const chatInput = document.getElementById('chatInput');
    const chatMessages = document.getElementById('chatbotMessages');
    const message = chatInput.value.trim();
    
    if (message === '') return;

    try {
        chatInput.disabled = true;
        
        // Add user message with timestamp
        const userMessageDiv = document.createElement('div');
        userMessageDiv.className = 'user-message';
        userMessageDiv.innerHTML = `
            <div class="message-content">
                <p>${message}</p>
            </div>
        `;
        chatMessages.appendChild(userMessageDiv);
        
        // Add loading indicator
        const loadingDiv = document.createElement('div');
        loadingDiv.className = 'bot-message loading';
        loadingDiv.innerHTML = `
            <div class="typing-indicator">
                <span></span><span></span><span></span>
            </div>
        `;
        chatMessages.appendChild(loadingDiv);
        
        chatInput.value = '';
        chatMessages.scrollTop = chatMessages.scrollHeight;
        
        const response = await fetch('/chat', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ message })
        });
        
        // Remove loading indicator
        chatMessages.removeChild(loadingDiv);
        
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }
        
        const data = await response.json();
        
        // Add bot response with timestamp
        const botMessageDiv = document.createElement('div');
        botMessageDiv.className = 'bot-message';
        botMessageDiv.innerHTML = `
            <div class="message-content">
                <p>${data.reply}</p>
            </div>
        `;
        chatMessages.appendChild(botMessageDiv);
        
    } catch (error) {
        console.error('Chat Error:', error);
        const errorDiv = document.createElement('div');
        errorDiv.className = 'bot-message error';
        errorDiv.innerHTML = `
            <div class="message-content">
                <p>Sorry, I encountered an error. Please try again.</p>
                <span class="timestamp">${new Date().toLocaleTimeString()}</span>
            </div>
        `;
        chatMessages.appendChild(errorDiv);
    } finally {
        chatInput.disabled = false;
        chatInput.focus();
        chatMessages.scrollTop = chatMessages.scrollHeight;
    }
}
        
        // Add event listener for Enter key
        document.getElementById('chatInput').addEventListener('keypress', function(e) {
            if (e.key === 'Enter' && !e.shiftKey) {
                e.preventDefault();
                sendChatMessage();
            }
        });


    // Function to toggle post form
    function togglePostForm() {
        document.querySelector('.posts-section').style.display = 'block';
        document.querySelector('.events-section').style.display = 'none';
        const postForm = document.getElementById('postCreationSection');
        postForm.style.display = postForm.style.display === 'none' ? 'block' : 'none';
    }

    // ...existing code...

function showPosts() {
    document.querySelector('.posts-section').style.display = 'block';
    document.querySelector('.events-section').style.display = 'none';
    // Hide post creation form when switching views
    document.getElementById('postCreationSection').style.display = 'none';
}

function showEvents() {
    document.querySelector('.posts-section').style.display = 'none';
    document.querySelector('.events-section').style.display = 'block';
}

// Handle hash-based navigation
window.addEventListener('DOMContentLoaded', function() {
    // Check hash on page load
    if (window.location.hash === '#posts') {
        showPosts();
    } else if (window.location.hash === '#events') {
        showEvents();
    }

    // Listen for hash changes
    window.addEventListener('hashchange', function() {
        if (window.location.hash === '#posts') {
            showPosts();
        } else if (window.location.hash === '#events') {
            showEvents();
        }
    });
});

    // Function to toggle event form
    function toggleEventForm() {
        const eventForm = document.getElementById('eventCreationSection');
        eventForm.style.display = eventForm.style.display === 'none' ? 'block' : 'none';
    }

    // Initialize page state on load
    document.addEventListener('DOMContentLoaded', function() {
        // Set default view to posts
        showPosts();
        
        // Add click handlers for navigation
        document.querySelectorAll('a[href="#"]').forEach(link => {
            link.addEventListener('click', function(e) {
                e.preventDefault(); // Prevent default anchor behavior
            });
        });
    });

    // Add this to your existing DOMContentLoaded event listener
document.addEventListener('DOMContentLoaded', function() {
    // ...existing code...
    
    // Handle hash-based navigation
    if (window.location.hash === '#posts') {
        showPosts();
    } else if (window.location.hash === '#events') {
        showEvents();
    }
    
    // Handle hash changes
    window.addEventListener('hashchange', function() {
        if (window.location.hash === '#posts') {
            showPosts();
        } else if (window.location.hash === '#events') {
            showEvents();
        }
    });
});

            
            // Event registration toggle
            document.querySelectorAll('.register-button').forEach(button => {
                button.addEventListener('click', async function() {
                    const eventId = this.dataset.eventId;
                    const isRegistered = this.classList.contains('registered');
                    const countSpan = this.querySelector('.registration-count');
                    
                    try {
                        const response = await fetch(`/event/${eventId}/${isRegistered ? 'unregister' : 'register'}`, {
                            method: 'POST'
                        });
                        
                        if (response.ok) {
                            const data = await response.json();
                            this.classList.toggle('registered');
                            this.textContent = `${isRegistered ? 'Register' : 'Unregister'} (${data.registration_count})`;
                            this.style.backgroundColor = isRegistered ? '#4CAF50' : '#f44336';
                        }
                    } catch (error) {
                        console.error('Error:', error);
                    }
                });
            });
            
            // By default, show posts section when page loads
            document.addEventListener('DOMContentLoaded', function() {
                showPosts();
            });

    </script>
    <script src="/js/chat.js"></script>

    <%- include('partials/footer') %>